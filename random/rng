<!doctype html>
<html lang="en">
<head>
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<title>Blackjack + Spin Wheel (with Sound)</title>
<style>
  :root{
    --bg:#0f1724;
    --card:#e6eef8;
    --accent:#ffbf00;
    --panel:#0b1220;
    --muted:#9fb0c8;
  }
  html,body{height:100%;margin:0;font-family:Inter,ui-sans-serif,system-ui,Segoe UI,Roboto,"Helvetica Neue",Arial;}
  body{background:linear-gradient(180deg,#071225 0%, #0e2333 100%);color:var(--card);display:flex;align-items:center;justify-content:center;padding:20px;}
  .container{max-width:1100px;width:100%;display:grid;grid-template-columns:1fr 360px;gap:20px;}
  header{grid-column:1/-1;display:flex;align-items:center;gap:12px;margin-bottom:6px;}
  h1{margin:0;font-size:20px;color:var(--accent);}
  .left, .right{background:rgba(255,255,255,0.03);border-radius:12px;padding:16px;box-shadow:0 6px 18px rgba(0,0,0,0.6);}
  .controls{display:flex;gap:8px;flex-wrap:wrap;align-items:center;margin-bottom:12px;}
  label{font-size:13px;color:var(--muted);}
  input[type=number]{padding:8px;border-radius:8px;border:1px solid rgba(255,255,255,0.06);background:transparent;color:var(--card);width:120px;}
  button{background:var(--accent);border:none;padding:8px 12px;border-radius:8px;color:#06121b;font-weight:600;cursor:pointer;transition:transform .1s;}
  button:active{transform:scale(0.97);}
  button.ghost{background:transparent;border:1px solid rgba(255,255,255,0.06);color:var(--card);}
  .status{display:flex;gap:12px;align-items:center;margin-bottom:12px;}
  .balance{font-size:18px;font-weight:700;color:#cfeaff;}
  .bet-area{display:flex;gap:8px;align-items:center;}
  .table{display:flex;flex-direction:column;gap:14px;padding:8px;}
  .hand{background:rgba(0,0,0,0.15);border-radius:10px;padding:10px;display:flex;flex-direction:column;gap:8px;}
  .cards-row{display:flex;gap:8px;flex-wrap:wrap;}
  .card{width:56px;height:80px;border-radius:8px;background:white;color:#0b1220;display:flex;flex-direction:column;justify-content:space-between;padding:6px;font-weight:700;box-shadow:0 6px 12px rgba(0,0,0,0.5);}
  .card.red{color:#d33;}
  .card.back{background:linear-gradient(180deg,#1e3a5a,#16324c);color:transparent;position:relative;}
  .card.back::after{content:"";position:absolute;inset:6px;border-radius:6px;background:repeating-linear-gradient(45deg,rgba(255,255,255,0.04) 0 6px,transparent 6px 12px);}
  .row{display:flex;gap:8px;align-items:center;}
  .actions{display:flex;gap:8px;}
  .message{padding:8px;border-radius:8px;background:rgba(255,255,255,0.03);color:var(--card);font-weight:600;}
  .right h3{margin:0 0 8px 0;color:var(--accent);}
  canvas#wheel{width:100%;height:260px;border-radius:10px;background:linear-gradient(180deg,#071a2a,#0a2a3b);display:block;}
  .wheel-controls{display:flex;gap:8px;align-items:center;justify-content:center;margin-top:8px;}
  .multiplier-badge{background:rgba(255,255,255,0.04);padding:8px;border-radius:8px;text-align:center;}
  footer{grid-column:1/-1;text-align:center;color:var(--muted);font-size:12px;margin-top:6px;}
  @media(max-width:980px){
    .container{grid-template-columns:1fr; padding-bottom:50px;}
    canvas#wheel{height:200px;}
  }
</style>
</head>
<body>
  <div class="container" id="app">
    <header>
      <h1>Blackjack + Spin Wheel</h1>
      <div style="margin-left:12px;color:var(--muted);font-size:13px;">All-in-one demo with sounds — host on GitHub Pages.</div>
    </header>

    <div class="left">
      <div class="controls">
        <div>
          <label>Starting Bankroll</label><br>
          <input id="startCash" type="number" min="1" value="1000" />
        </div>
        <div style="display:flex;flex-direction:column;justify-content:center">
          <button id="setBank">Set</button>
        </div>
        <div style="margin-left:auto">
          <div class="balance">Balance: $<span id="balance">1000</span></div>
        </div>
      </div>

      <div class="status">
        <div class="bet-area">
          <label style="margin-right:6px">Bet</label>
          <input id="betInput" type="number" min="1" value="10" />
          <button id="halfBet" class="ghost">Half Bet</button>
          <button id="doubleBet" class="ghost">Double Bet</button>
        </div>
        <div style="margin-left:auto;display:flex;gap:8px;align-items:center">
          <div class="multiplier-badge">Wheel × <span id="currentMultiplier">1.0</span></div>
        </div>
      </div>

      <div class="table">
        <div class="hand" id="dealerHand">
          <div style="font-weight:700;color:var(--muted)">Dealer (<span id="dealerValue">0</span>)</div>
          <div class="cards-row" id="dealerCards"></div>
        </div>

        <div class="hand" id="playerHand">
          <div style="font-weight:700;color:var(--muted)">You (<span id="playerValue">0</span>)</div>
          <div class="cards-row" id="playerCards"></div>
        </div>

        <div class="row">
          <div class="actions">
            <button id="dealBtn">Deal</button>
            <button id="hitBtn" class="ghost" disabled>Hit</button>
            <button id="standBtn" class="ghost" disabled>Stand</button>
            <button id="newRoundBtn" class="ghost" disabled>New Round</button>
          </div>
          <div style="margin-left:auto">
            <div class="message" id="message">Place a bet and press Deal.</div>
          </div>
        </div>
      </div>
    </div>

    <aside class="right">
      <h3>Spin Wheel (optional)</h3>
      <canvas id="wheel" width="320" height="260"></canvas>
      <div class="wheel-controls">
        <button id="spinBtn">Spin Wheel</button>
        <button id="resetMultiplier" class="ghost">Reset ×1</button>
      </div>
      <div style="margin-top:10px;font-size:13px;color:var(--muted)">
        Spin for a payout multiplier (0.5×–3×). Applies to next win.
      </div>
    </aside>

    <footer>Fully client-side — host anywhere (e.g. GitHub Pages).</footer>
  </div>

<script>
(() => {
  const dealSnd = new Audio("data:audio/wav;base64,UklGRr4AAABXQVZFZm10IBAAAAABAAEARKwAABCxAgAEABAAZGF0Ya4AAAB/////AAD/AAD//wAA//8AAP//AAD//wAA//8AAP//AAD//wAA");
  const clickSnd = new Audio("data:audio/wav;base64,UklGRu4AAABXQVZFZm10IBAAAAABAAEARKwAABCxAgAEABAAZGF0Yu4AAAAA//8AAP//AAD//wAA//8AAP8AAP8AAP8AAP//AAD//wAA");
  const spinSnd = new Audio("data:audio/wav;base64,UklGRtIAAABXQVZFZm10IBAAAAABAAEARKwAABCxAgAEABAAZGF0YtIAAAB/////AAD//wAA//8AAP//AAD//wAA//8AAP//AAD//wAA");
  const winSnd = new Audio("data:audio/wav;base64,UklGRrQAAABXQVZFZm10IBAAAAABAAEARKwAABCxAgAEABAAZGF0YrQAAAB/f39/f39/f39/f39/f39/f39/f39/f39/f39/f39/f39/f39/");
  const playSnd = s=>{try{s.currentTime=0;s.play();}catch(e){}};

  // All logic same as previous (simplified wheel)
  const balanceEl=document.getElementById('balance');
  const betInput=document.getElementById('betInput');
  const setBank=document.getElementById('setBank');
  const startCash=document.getElementById('startCash');
  const dealBtn=document.getElementById('dealBtn');
  const hitBtn=document.getElementById('hitBtn');
  const standBtn=document.getElementById('standBtn');
  const newRoundBtn=document.getElementById('newRoundBtn');
  const halfBet=document.getElementById('halfBet');
  const doubleBet=document.getElementById('doubleBet');
  const message=document.getElementById('message');
  const playerCards=document.getElementById('playerCards');
  const dealerCards=document.getElementById('dealerCards');
  const playerValue=document.getElementById('playerValue');
  const dealerValue=document.getElementById('dealerValue');
  const wheelCanvas=document.getElementById('wheel');
  const spinBtn=document.getElementById('spinBtn');
  const resetMultiplier=document.getElementById('resetMultiplier');
  const currentMultiplier=document.getElementById('currentMultiplier');
  const ctx=wheelCanvas.getContext('2d');
  let balance=1000,bet=10,deck=[],player=[],dealer=[],inRound=false,wheelMultiplier=1.0;
  const suits=['♠','♥','♦','♣'],ranks=['A','2','3','4','5','6','7','8','9','10','J','Q','K'];
  const wheelSegments=[{label:'0.5×',value:0.5,color:'#c13b3b'},{label:'1×',value:1,color:'#2e9bff'},{label:'1.5×',value:1.5,color:'#00b894'},{label:'2×',value:2,color:'#ffb72b'},{label:'3×',value:3,color:'#8e44ad'}];
  const cx=wheelCanvas.width/2,cy=wheelCanvas.height/2,radius=Math.min(cx,cy)-12;let rotation=0;

  const createDeck=()=>{let d=[];for(const s of suits)for(const r of ranks)d.push({r,s});return d;};
  const shuffle=a=>{for(let i=a.length-1;i>0;i--){const j=Math.floor(Math.random()*(i+1));[a[i],a[j]]=[a[j],a[i]];}};
  const draw=()=>{if(!deck.length){deck=createDeck().concat(createDeck());shuffle(deck);}return deck.pop();};
  const cardValue=c=>c.r==='A'?11:['J','Q','K'].includes(c.r)?10:+c.r;
  const handValue=h=>{let t=0,a=0;for(const c of h){t+=cardValue(c);if(c.r==='A')a++;}while(t>21&&a--)t-=10;return t;};
  const renderCard=c=>{const e=document.createElement('div');e.className='card'+((c.s==='♥'||c.s==='♦')?' red':'');e.innerHTML=`<div>${c.r}</div><div style="text-align:center;font-size:20px">${c.s}</div><div style="text-align:right">${c.r}</div>`;return e;};
  const renderHands=(reveal=false)=>{dealerCards.innerHTML='';playerCards.innerHTML='';dealer.forEach((c,i)=>{dealerCards.appendChild((i===1&&!reveal&&inRound)?Object.assign(document.createElement('div'),{className:'card back'}):renderCard(c));});player.forEach(c=>playerCards.appendChild(renderCard(c)));playerValue.textContent=handValue(player);dealerValue.textContent=reveal?handValue(dealer):(inRound?cardValue(dealer[0]):0);};
  const updateUI=()=>{balanceEl.textContent=balance;betInput.value=bet;currentMultiplier.textContent=wheelMultiplier.toFixed(2);};

  setBank.onclick=()=>{playSnd(clickSnd);balance=+startCash.value||1000;updateUI();message.textContent='Bankroll set.';};
  halfBet.onclick=()=>{playSnd(clickSnd);bet=Math.floor(balance/2)||1;updateUI();};
  doubleBet.onclick=()=>{playSnd(clickSnd);bet=Math.min(balance,bet*2);updateUI();};

  dealBtn.onclick=()=>{playSnd(clickSnd);if(inRound)return;bet=+betInput.value||10;if(bet>balance){message.textContent='Not enough balance';return;}player=[draw(),draw()];dealer=[draw(),draw()];inRound=true;renderHands();updateUI();hitBtn.disabled=false;standBtn.disabled=false;dealBtn.disabled=true;message.textContent='Your move';playSnd(dealSnd);};
  hitBtn.onclick=()=>{playSnd(clickSnd);player.push(draw());renderHands();playSnd(dealSnd);if(handValue(player)>21)endRound();};
  standBtn.onclick=()=>{playSnd(clickSnd);while(handValue(dealer)<17)dealer.push(draw());endRound();};
  newRoundBtn.onclick=()=>{playSnd(clickSnd);inRound=false;player=[];dealer=[];renderHands();dealBtn.disabled=false;hitBtn.disabled=true;standBtn.disabled=true;newRoundBtn.disabled=true;message.textContent='Place a bet and press Deal.';};

  function endRound(){inRound=false;hitBtn.disabled=true;standBtn.disabled=true;newRoundBtn.disabled=false;renderHands(true);
    const pv=handValue(player),dv=handValue(dealer);let payout=0,txt='';
    if(pv>21)txt='Bust! You lose '+bet,payout=-bet;
    else if(dv>21||pv>dv)txt='You win '+bet,payout=bet;
    else if(pv===dv)txt='Push',payout=0;
    else txt='Lose '+bet,payout=-bet;
    if(payout>0)payout*=wheelMultiplier;
    balance+=payout;balance=Math.max(0,balance);message.textContent=txt+' (×'+wheelMultiplier.toFixed(2)+')';updateUI();if(payout>0)playSnd(winSnd);
  }

  // Wheel draw & spin
  const drawWheel=()=>{ctx.clearRect(0,0,wheelCanvas.width,wheelCanvas.height);const seg=wheelSegments.length,ang=(Math.PI*2)/seg;
    for(let i=0;i<seg;i++){const s=rotation+i*ang;ctx.beginPath();ctx.moveTo(cx,cy);ctx.arc(cx,cy,radius,s,s+ang);ctx.closePath();ctx.fillStyle=wheelSegments[i].color;ctx.fill();
      ctx.save();ctx.translate(cx,cy);ctx.rotate(s+ang/2);ctx.textAlign='right';ctx.fillStyle='#fff';ctx.font='14px system-ui';ctx.fillText(wheelSegments[i].label,radius-8,4);ctx.restore();}
    ctx.beginPath();ctx.moveTo(cx,cy-radius-4);ctx.lineTo(cx-10,cy-radius+18);ctx.lineTo(cx+10,cy-radius+18);ctx.closePath();ctx.fillStyle='#fff';ctx.fill();};
  drawWheel();

  spinBtn.onclick=()=>{if(spinBtn.disabled)return;playSnd(spinSnd);spinBtn.disabled=true;const idx=Math.floor(Math.random()*wheelSegments.length);const seg=wheelSegments.length;const full=4+Math.random()*2;const target=full*Math.PI*2+(Math.PI/2)-(idx*(2*Math.PI/seg)+(Math.PI/seg));const start=rotation;const dur=2600;const st=performance.now();
    const anim=t=>{const p=Math.min(1,(t-st)/dur);rotation=start+(target-start)*(1-Math.pow(1-p,3));drawWheel();if(p<1)requestAnimationFrame(anim);else{wheelMultiplier=wheelSegments[idx].value;updateUI();message.textContent='Wheel result: ×'+wheelMultiplier.toFixed(2);playSnd(winSnd);spinBtn.disabled=false;}};requestAnimationFrame(anim);};
  resetMultiplier.onclick=()=>{wheelMultiplier=1;updateUI();message.textContent='Multiplier reset';playSnd(clickSnd);};

  updateUI();renderHands();
})();
</script>
</body>
</html>